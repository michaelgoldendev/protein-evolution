include("Main.jl")

fastafile = abspath("../data/influenza_a/HA/selection3.fasta")
newickfile= abspath("../data/influenza_a/HA/selection3.fasta.nwk")	
blindnodenames = String["6n41.pdb_1951"]
fastmlJTT = "MKAKLLVLLCTFTATYADTICIGYHANNSTDTVDTVLEKNVTVTHSVNLLEDSHNGKLCLLKGIAPLQLGNCSVAGWILGNPECELLISKESWSYIVETPNPENGTCYPGYFADYEELREQLSSVSSFERFEIFPKESSWPNHTLVTGVSASCSHNGKSSFYRNLLWLTEKNGLYPNLSKSYVNNKEKEVLVLWGVHHPSNIGDQRALYHTENAYVSVVSSHYSRRFTPEIAKRPKVRDQEGRINYYWTLLEPGDTIIFEANGNLIAPWYAFALSRGFGSGIITSNAPMDECDTKCQTPQGAINSSLPFQNVHPVTIGECPKYVRSAKLRMVTGLRNIPSIQSRGLFGAIAGFIEGGWTGMVDGWYGYHHQNEQGSGYAADQKSTQNAINGITNKVNSVIEKMNTQFTAVGKEFNKLERRMENLNKKVDDGFLDIWTYNAELLVLLENERTLDFHDSNVKNLYEKVKSQLKNNAKEIGNGCFEFYHKCNNECMESVKNGTYDYPKYSEESKLNREKIDGVKLESMGVYQILAIYSTVASSLVLLVSLGAISFWMCSNGSLQCRICI"
fastmlLG = "MKVKLLVLLCTFTATYADTICIGYHANNSTDTVDTVLEKNVTVTHSVNLLEDSHNGKLCLLKGIAPLQLGNCSVAGWILGNPECELLISKESWSYIVEKPNPENGTCYPGHFADYEELREQLSSVSSFERFEIFPKESSWPNHT-VTGVSASCSHNGKSSFYKNLLWLTGKNGLYPNLSKSYANNKEKEVLVLWGVHHPPNIGVQRALYHTENAYVSVVSSHYSRKFTPEIAKRPKVRDQEGRINYYWTLLEPGDTIIFEANGNLIAPRYAFALSRGFGSGIINSNAPMDECDAKCQTPQGAINSSLPFQNVHPVTIGECPKYVRSAKLRMVTGLRNIPSIQSRGLFGAIAGFIEGGWTGMVDGWYGYHHQNEQGSGYAADQKSTQNAINGITNKVNSVIEKMNTQFTAVGKEFNKLERRMENLNKKVDDGFIDIWTYNAELLVLLENERTLDFHDSNVKNLYEKVKSQLKNNAKEIGNGCFEFYHKCNDECMESVKNGTYDYPKYSEESKLNREKIDGVKLESMGVYQILAIYSTVASSLVLLVSLGAISFWMCSNGSLQCRIC"


#=
fastafile = abspath("../data/test_data/westnile_dengue_selection.fasta")
newickfile=abspath("../data/test_data/westnile_dengue_selection.fasta.nwk")	
blindnodenames = String["AEN02430.1"]
fastmlJTT = "MSKKPGGPGKNRAVNMLKRGMPRVMSLIGLAKRAMLSLIDGKGPIRFVLALLAFFKFTAIAPTRALLDRWRGVNKQTAMKHLLSFKKELGTLTNAMNRRSTKQKKRGGVVGVMAVLGLVACVGSVTLSNFQGKVMMTVNATDVANIITIPTASGKNLCTVRAMDVGFMCDDTITYECPALAAGNDPEDIDCWCTKAAVYVRYGRCTKTRHSRRSRRSLTVQAHGESTLANKKGAWLDSTKATRYLVKTESWILRNPGYALVAVVIGWMLGSNNMQRVVFVVLLLLVAPAYSFNCLGMSNRDFLEGVTGATWLDLVLEGDSCVTIMSKDKPTIDVKMTNMEATNLAEVRSYCYAATVSDLSTKAACPTMGEAHNDKRADSAYVCKQGVVDRGWGNGCGLFGKGSIDTCARFACSTKATGRTILKENIKYEVAIFVHGPTTVESHGNYATQQGATQAGRFSITPAAPSYTLKLGEYGEVTVDCEPRSGIDTNAYYVMTVGKKTFLVHREWFMDLNLPWSSAGDTQGNVWRNRETLVEFEEPHATKQSVVALGSQEGALHQALAGAIPVEFSSNTVKLTSGHLKCRVKMEKLQLKGTTYGVCSKAFKFVGTPADTGHGTVVLELQYTGTDGPCKIPISSVASLNDLTPVGRLVTVNPFVSVATANAKVLIELEPPFGDSYIVVGRGEQQINHHWHKSGSSIGKAFTTTLKGAQRLAALGDTAWDFGSVGGVLTSVGQAIHQVFGGAFRSLFGGMSWITQGLLGALLLWMGISARDRSIALTFLAIGGVLLFLSINVHADTGCAIDIGRQELRCGSGVFIHNDVEAWMDRYKYYPETPQGLAKIIQKAHQEGVCGLRSVSRLEHQMWDSVKDELNTLLKENGVDLSIVVEKQEGMYKAAPKRLKATTEKLEMGWKAWGKSIIFAPEIANNTFVVDGPETEECPSQSRAWNSMEVEDFGFGLTSTRMFLKIREVNTTECDAKIIGTAVKNNLAIHSDLSYWIESGFNETWKLERAVLGEVKSCTWPETHTLWGDGVVESDLIIPVTLAGPRSNHNRRPGYKMQNQGPWDEGRVELDFDYCPGTTVTVSESCGHRGASTRTTTDSGKLITDWCCRSCTLPPLRFQTRSGCWYGMEIRPQKHDERTLVQSQVNAYNADMIDPFQLGLLVVFLATQEVLRKRWTAKISGPAIMIALLVLVLGGITYTDVLRYVILVGAAFAESNSGGDVVHLALMATFKIQPVFMVATFVKARWTNQENILLMLAAVFFQMAYHDARHILQWGIPDVLNSLAVAWMILRAITFTNTSNVVVPLLALLTPGLKCLNLDVYRILLLMIGIGSLIREKRSAAAKKKGASLICLALASTGSFNPMILAAGLIACDPNRKRGWPATEVMTAVGLMFAIVGGLAELDMDSMAIPMTIAGLMFAAFVISGKSTDMWIERVADISWENDAEITGSSERVDVRLDDDGNFQLMNDPGAPWKLWMLRMACLAISAYTPWAILPSVIGFWITLQYTKRGGVLWDTPSPKVYKKGDTTTGVYRIMTRGILGSYQAGAGVMVEGVFHTLWHTTKGAALMSGEGRLDPYWGSVKEDRLCYGGPWKLQHKWNGHDEVQMIVVKPGESVKNVQTKPGVFKTPEGEIGAVTLDFPTGTSGSPIVDKNGDVIGLYGNGVIMPNGAYISAIVQGERMEEPPPVGFEPDMLRKKQISVLDLHPGAGKTRKILPQIIREAINRRLRTAILAPTRVVAAEMAEALRGLPIRYQTSAVTREHSGNEIVDVMCHATLTHRLMSPHRVPNYNLFVMDEAHFTDPASIAARGYISTKVELGEAAAIFMTATPPGTHDPFPESNAPIADMQTEIPDRAWNSGYEWITEYTGKTVWFVPSVKMGNEIALCLQRAGKKVIQLNRKSYETEYPKCKNDDWDFVVTTDISEMGANFRASRVIDSRKSVKPTIITDGEGKVVLSEPSAITAASAAQRRGRIGRNPSQVGDEYCYGGHTNEDDSNFAHWTEARIMLDNINMPNGLIAQLYQPEREKVCTMDGEYRLRGEERKNFLELLRTADLPVWLAYKVASAGISYHDRKWCFDGPRTNTILEDNNEVEVITKLGERKILRPWWTDARVYSDHQALKAFKDFASGKRSQVGDLIEVLGRMPEHFMGKTWEALDTMYVVATAEKGGRAHRMALEELPDALQTVALIALLGVMTMGVFFLLMQRKGIGKIGLGGVIIGVATFFCWMAEVPGTKIAGMLLLSLLLMIVLIPEPEKQRSQTDNQLAVFLICVLTLVGAVAANEMGWLDKTKSDIGSLFGQLLGKLEAKESFSVGEFLLDLRPATAWSLYAVTTAFLTPLLKHLITSDYINTSLTSINVQASALFTLARGFPFVDVGISALLLAAGCWGQVTLTVTVTATALLFCHYAYMIPGWQAEAMRSAQRRTAAGIMKNAVVDGIVATDVPELERATPMMQKKVGQVMLILVSLAAVVVNPSVRTVREAGILITAAAVTLWENGASSVWNATTAIGLCHIMREGWLSCLSITWTLIKNLEKPGLKRGTGAKGRTLGEVWKEKLNQMSKEEFSRYRKEAIIEVDRSAAKHARREGNITGGHPVSRGSAKLRWLVERKFVEPVGRVIDLGCGRGGWCYYMATQKRVQEVRGYTKRGPGHEEPQLVQSYGWNIVTMKSGVDVFYRPSESCDTLLCDIGESSSSAEVEEHRTLRVLEMVEDWLHRGPKEFCVKVLCPYMPKVVEKMEVLQRRYGGGLVRNPLSRNSTHEMYWVSQASGNIVHAVNMTSQVLLGRMEKRTWKGPQFEEDVNLGSGTRAVGKPLLNSDTSKIKNRVERLKREYGSTWHHDENHPYRTWNYHGSYEVNPLVSASSLVNGVVRLLSKPWDTITNVTTMAMTDTTPFGQQRVFKEKVDTKAPEPPEGVRSVLNETTNWLWAFLSRDKRPRLCSREEFKRKVNSNAALGAMFEEQNQWKSAREAVEDPKFWEMVDEEREAHLRGECYTCIYNMMGKREKKPGEFGKAKGSRAIWFMWLGARFLEFEALGFLNEDHWLGRENSGGGVEGLGLQKLGYILREVGTRTGGKIYADDTAGWDTRITMTDLENEAKVLELLDGEHRRLARSIIELTYRHKVVKVMRPAADGKTVMDVISREDQRGSGQVVTYALNTFTNLAVQLVRMMEGEGVITPDDVEKLGRGKGPKVRTWLFENGEERLGRMAVSGDDCVVKPLDDRFASSLHFLNAMSKVRKDIQEWKPSTGWYDWQQVPFCSNHFTELVMKDGRTLVVPCRGQDELIGRARISPGAGWNVRDTACLAKSYAQMWLLLYFHRRDLRLMANAICSAVPADWVPTGRTTWSIHARGEWMTTEDMLEVWNRVWIEENEWMEDKTPVERWSDVPYSGKREDIWCGSLIGTRARATWAENIQVAINQVRAIIGEEKYVDYMSSLRRYLEEVTLVEDSVL"
fastmlLG = ""
=#

benchmark_seq = fastmlJTT


sequences = AbstractString[]
names = AbstractString[]
FastaIO.FastaReader(fastafile) do fr
    for (desc, seq) in fr
        push!(names,desc)
        push!(sequences, seq)
    end
end

dummynames = Dict()
dummycount = 1

renamedict = Dict()

fout = open(string(fastafile,".fastml.fasta"),"w")
seqcount = 1
for (name,seq) in zip(names,sequences)
	global seqcount
	seqname = string("seq", seqcount)
	seqcount += 1
	renamedict[name] = seqname

	global dummycount
	if name in blindnodenames
		#println(fout,">",seqname)
		newseq = replace(seq, r"[^-]" => "X")
		#println(fout,newseq)

		d1 = string("dummy", dummycount)
		dummycount += 1
		d2 = string("dummy", dummycount)

		
		println(fout,">",d1)
		println(fout,newseq)		
		println(fout,">",d2)
		println(fout,newseq)
		dummynames[name] = (d1,d2)


		counthits = 0.0
		counttotals = 0.0		
		for (c1,c2)	in zip(seq,benchmark_seq)
			if c1 != '-'
				if c1 == c2
					counthits += 1.0
				end
				counttotals += 1.0
			end
		end
		println(name)
		println(counthits/counttotals)
		println(counthits,"\t",counttotals,"\t",length(benchmark_seq))
	else
		println(fout,">",seqname)
		println(fout,string(seq))
	end
end
close(fout)

root = gettreefromnewick(readlines(open(newickfile,"r"))[1])
nodelist = getnodelist(root)
for node in nodelist	
	if node.name in blindnodenames
		l1 = TreeNode(0.01, dummynames[node.name][1])
		l2 = TreeNode(0.01, dummynames[node.name][2])
		addchild(node,l1)
		addchild(node,l2)		
		node.name = ""
	end
end
for node in nodelist
	if haskey(renamedict, node.name)
		node.name = renamedict[node.name]
	end
end
fout = open(string(fastafile,".fastml.nwk"),"w")
println(fout, getnewick(root))
close(fout)
